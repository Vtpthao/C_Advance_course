STDARGS: giống macro variadic, cung cấp các hàm/macro mà có số lượng tham số không cố định, vd điển hình là hàm scanf và printf
    - va_list: là kiểu dữ liệu chứa một cái chuỗi , = typedef char* va_list
        VD: 
        void test (int count,...)
        {
            va_list args; //char *args = "int count,1,5,6"
        }
        int main()
        {
            test(1,5,6);
            return 0;
        }

    - va_start(args, count): chứa 2 tham số, tham số thứ nhất là va_list, tham số thứ 2 là tên biến dùng để loại bỏ phần thừa. Dùng để lấy ra các đối số cần dùng
        //char *args = {1,5,6}
    
    - va_arg(args, int): chứa 2 tham số, tham số thứ nhất là va_list (danh sách cần thao tác chính), tham số thứ 2 là kiểu dữ liệu dùng để xác định kích thước cần đọc trong vùng nhớ của va_start

    - va-end(args): thu hồi, thu hồi con trỏ

ASSERT: macro này được sử dụng để kiểm tra một điều kiện, nếu True -> không có gì xảy ra và chương trình tiếp tục thực thi, nếu False -> chương trình dừng lại và thông báo lỗi
    dùng cho debug, chỉ rõ lỗi ở đâu. Nhưng nhược điểm là lúc bị lỗi sẽ dừng chương trình